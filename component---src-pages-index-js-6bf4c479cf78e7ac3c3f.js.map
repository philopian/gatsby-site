{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["styles","display","flexDirection","alignItems","fontFamily","Blogs","_ref","blogPosts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","map","blog","date","node","frontmatter","title","key","Math","random","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","path","Body","query","render","_public_static_d_3589539481_json__WEBPACK_IMPORTED_MODULE_0__","IndexPage","_components_layout__WEBPACK_IMPORTED_MODULE_3__","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","props","children","Consumer","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","Header","siteTitle","homeButton","className","console","log","style","margin","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Layout","_public_static_d_1170628050_json__WEBPACK_IMPORTED_MODULE_0__","_header__WEBPACK_IMPORTED_MODULE_2__","site","siteMetadata","maxWidth","padding","paddingTop","Date","getFullYear","href"],"mappings":"gJA6BMA,EAAS,CACbC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,WAAY,UAERC,EAAQ,SAAAC,GAAc,IACXC,EADWD,EAAXE,KACmBC,kBAA1BC,MACR,OACEC,EAAAC,EAAAC,cAAA,OAAKb,OAAQA,GACVO,EAAUO,IAAI,SAAAC,GACb,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KAC7BG,EAAQJ,EAAKE,KAAKC,YAAYC,MACpC,OAAQR,EAAAC,EAAAC,cAAA,MAAIO,IAAQJ,EAAL,KAAcK,KAAKC,UAC/BN,EADK,MACIG,EADJ,KACYR,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAIT,EAAKE,KAAKC,YAAYO,MAAhC,mBAOtBC,EAAO,WACX,OACEf,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEI,MA9CW,aA+CXC,OAAQ,SAAApB,GAAI,OAAIG,EAAAC,EAAAC,cAACR,EAAD,CAAOG,KAAMA,KAF/BA,KAAAqB,KAeWC,UARG,kBAChBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACa,EAAD,8BC/DN,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAAM,EAAAC,GAAAP,EAAAC,EAAAC,EAAA,sBAAAM,EAAAjC,IAAAyB,EAAA,KAAAA,EAAA,GAcyBS,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT7C,GAA2E,IAAxC8C,EAAwC9C,EAAxC8C,gBAAiB5C,EAAuBF,EAAvBE,KAAMmB,EAAiBrB,EAAjBqB,MAAOC,EAAUtB,EAAVsB,OACzDyB,EAAY7C,EACdA,EAAKA,KACL4C,EAAgBzB,IAAUyB,EAAgBzB,GAAOnB,KAErD,OACEkC,EAAA9B,EAAAC,cAAC6B,EAAA9B,EAAM0C,SAAP,KACGD,GAAazB,EAAOyB,IACnBA,GAAaX,EAAA9B,EAAAC,cAAA,qCAKrB,IAAM2B,EAAc,SAAAe,GAAS,IACnB/C,EAAkC+C,EAAlC/C,KAAMmB,EAA4B4B,EAA5B5B,MAAOC,EAAqB2B,EAArB3B,OAAQ4B,EAAaD,EAAbC,SAE7B,OACEd,EAAA9B,EAAAC,cAACmC,EAAmBS,SAApB,KACG,SAAAL,GAAe,OACdV,EAAA9B,EAAAC,cAACsC,EAAD,CACE3C,KAAMA,EACNmB,MAAOA,EACPC,OAAQA,GAAU4B,EAClBJ,gBAAiBA,yCCzC3B,IAAAM,EAAArB,EAAA,KAAAsB,EAAAtB,EAAA,GAAA1B,EAAA0B,EAAAM,EAAAgB,GAIMC,EAAS,SAAAtD,GAAA,IAAGuD,EAAHvD,EAAGuD,UAAWC,EAAdxD,EAAcwD,WAAd,OACbnD,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACGiD,EAAanD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMlC,GAAG,IAAIuC,UAAU,oBAAvB,IAA6C,IAA7C,KAA4D,MAG5EpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,SACZC,QAAQC,IAAI,eAAgBH,GAE7BnD,EAAAC,EAAAC,cAAA,MAAIqD,MAAO,CAAEC,OAAQ,IACnBxD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMlC,GAAG,IAAIuC,UAAU,QACpBF,OAWXD,EAAOQ,aAAe,CACpBP,UAAS,IAGID,iFCRAS,UAjBU,SAAA/D,GAAiC,IAA9BgE,EAA8BhE,EAA9BgE,SAAUC,EAAoBjE,EAApBiE,cACpC,OAAKA,EAGEtB,IAAMpC,cAAc2D,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,qFC6CIC,IArCA,SAAAtE,GAAkB,IAAfkD,EAAelD,EAAfkD,SACVhD,EAAIqE,EAAArE,KAUV,OACEG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQjB,UAAWrD,EAAKuE,KAAKC,aAAa7D,QAC1CR,EAAAC,EAAAC,cAAA,OACEqD,MAAO,CACLC,OAAM,SACNc,SAAU,IACVC,QAAO,wBACPC,WAAY,IAGdxE,EAAAC,EAAAC,cAAA,YAAO2C,GACP7C,EAAAC,EAAAC,cAAA,oBACK,IAAIuE,MAAOC,cADhB,mBAGE1E,EAAAC,EAAAC,cAAA,KAAGyE,KAAK,4BAAR","file":"component---src-pages-index-js-6bf4c479cf78e7ac3c3f.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { StaticQuery, graphql } from 'gatsby'\n\n\nconst getAllPosts = graphql`\nquery{\n  allMarkdownRemark(\n    limit:10\n    sort: {fields: [frontmatter___date], order: DESC }\n    filter: { frontmatter: { published: {eq: true}} }\n    ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          path\n          date\n          excerpt\n          published\n        }\n      }\n    }\n  }\n}\n`;\n\nconst styles = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  fontFamily: 'avenir'\n}\nconst Blogs = ({ data }) => {\n  const { edges: blogPosts } = data.allMarkdownRemark\n  return (\n    <div styles={styles}>\n      {blogPosts.map(blog => {\n        const date = blog.node.frontmatter.date\n        const title = blog.node.frontmatter.title\n        return (<li key={`${date}__${Math.random()}`}>\n          {date} - {title}  <Link to={blog.node.frontmatter.path}>Go to post</Link>\n        </li>)\n      })}\n    </div>\n  )\n}\n\nconst Body = () => {\n  return (\n    <StaticQuery\n      query={getAllPosts}\n      render={data => <Blogs data={data} />}\n    />\n  )\n}\n\nconst IndexPage = () => (\n  <Layout>\n    <h2>Blog Posts:</h2>\n    <ul>\n      <Body />\n    </ul>\n  </Layout>\n)\nexport default IndexPage\n/*\n  <Layout>\n    <Header />\n    <SEO title=\"Home\" />\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n      <Image />\n    </div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n*/","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, homeButton }) => (\n  <header>\n    <h1>\n      {homeButton ? <Link to=\"/\" className=\"home-button link\" > {\"<\"} </Link> : null}\n    </h1>\n\n    <div className=\"title\">\n      {console.log('[homeButton]', homeButton)}\n\n      <h1 style={{ margin: 0 }}>\n        <Link to=\"/\" className=\"link\" >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}